// <auto-generated />
using IvonneManagement.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IvonneManagement.Migrations
{
    [DbContext(typeof(IvonneManagementContext))]
    [Migration("20220105184720_UpdateServicesMig")]
    partial class UpdateServicesMig
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("IvonneManagement.Models.Apartamento", b =>
                {
                    b.Property<int>("IdApt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InquilinoId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdApt");

                    b.HasIndex("InquilinoId");

                    b.ToTable("Apartamentos");
                });

            modelBuilder.Entity("IvonneManagement.Models.Inquilino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellidos")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoInquilino")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("NumeroTelefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Inquilinos");
                });

            modelBuilder.Entity("IvonneManagement.Models.PagoMantenimiento", b =>
                {
                    b.Property<int>("IdPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ApartamentoId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InquilinoId")
                        .HasColumnType("int");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.HasKey("IdPago");

                    b.HasIndex("ApartamentoId");

                    b.HasIndex("InquilinoId");

                    b.ToTable("PagoMantenimientos");
                });

            modelBuilder.Entity("IvonneManagement.Models.RentaParqueo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdApt")
                        .HasColumnType("int");

                    b.Property<int>("InquilinoId")
                        .HasColumnType("int");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("IdApt");

                    b.HasIndex("InquilinoId");

                    b.ToTable("RentaParqueos");
                });

            modelBuilder.Entity("IvonneManagement.Models.Apartamento", b =>
                {
                    b.HasOne("IvonneManagement.Models.Inquilino", "Inquilino")
                        .WithMany("Apartamentos")
                        .HasForeignKey("InquilinoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Inquilino");
                });

            modelBuilder.Entity("IvonneManagement.Models.PagoMantenimiento", b =>
                {
                    b.HasOne("IvonneManagement.Models.Apartamento", "Apartamento")
                        .WithMany("PagoMantenimientos")
                        .HasForeignKey("ApartamentoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IvonneManagement.Models.Inquilino", "Inquilino")
                        .WithMany("PagoMantenimientos")
                        .HasForeignKey("InquilinoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Apartamento");

                    b.Navigation("Inquilino");
                });

            modelBuilder.Entity("IvonneManagement.Models.RentaParqueo", b =>
                {
                    b.HasOne("IvonneManagement.Models.Apartamento", "Apartamento")
                        .WithMany("RentaParqueos")
                        .HasForeignKey("IdApt")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IvonneManagement.Models.Inquilino", "Inquilino")
                        .WithMany("RentaParqueos")
                        .HasForeignKey("InquilinoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Apartamento");

                    b.Navigation("Inquilino");
                });

            modelBuilder.Entity("IvonneManagement.Models.Apartamento", b =>
                {
                    b.Navigation("PagoMantenimientos");

                    b.Navigation("RentaParqueos");
                });

            modelBuilder.Entity("IvonneManagement.Models.Inquilino", b =>
                {
                    b.Navigation("Apartamentos");

                    b.Navigation("PagoMantenimientos");

                    b.Navigation("RentaParqueos");
                });
#pragma warning restore 612, 618
        }
    }
}
